---
networks:
  tsdproxy_net:
    external: true
    name: tsdproxy_net

# Media Server Compose for TrueNAS Stack
# Mount Path:
## App Data: ${APPCONFIG_DIR}
## Media path: ${MEDIA_DIR}/Media
## Downloads path: ${MEDIA_DIR}/Downloads

# Ports and IP
# Jellyfin: 172.18.0.9
# - 8096:8096
# - 8920:8920 #optional
# - 7359:7359/udp #optional
# - 1900:1900/udp #optional
# Jellyseerr: 172.18.0.10
# - 5055:5055
# Komga: 172.18.0.14
# - 25600:25600
# Suwayomi: 172.18.0.15
# - 4567:4567
# QBittorrent: 172.18.0.20
# - 8080:8080
# - 6882:6881
# - 6882:6881/udp

services:

########################## JELLYFIN AND TAILSCALE ##########################
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=568
      - PGID=568
      - TZ=${TZ}
      # - JELLYFIN_PublishedServerUrl=http://192.168.0.5 #optional
    volumes:
      - ${APPCONFIG_DIR}/Jellyfin:/config
      - ${MEDIA_DIR}/Media:/data/media
    # labels:
    #   tsdproxy.enable: "true"
    #   tsdproxy.name: "jellyfin"
    #   tsdproxy.container_port: "8096"
    restart: unless-stopped
    network_mode: service:tailscale-jellyfin # Sidecar configuration to route Jellyfin through Tailscale
    depends_on:
      tailscale-jellyfin:
        condition: service_healthy
  
  tailscale-jellyfin:
    image: tailscale/tailscale:latest # Image to be used
    container_name: tailscale-jellyfin # Name for local container management
    hostname: jellyfin # Name used within your Tailscale environment
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_SERVE_CONFIG=/config/serve.json # Tailsacale Serve configuration to expose the web interface on your local Tailnet - remove this line if not required
      - TS_USERSPACE=false
      - TS_ENABLE_HEALTH_CHECK=true              # Enable healthcheck endpoint: "/healthz"
      - TS_LOCAL_ADDR_PORT=127.0.0.1:41234       # The <addr>:<port> for the healthz endpoint
      - PUID=568
      - PGID=568
      #- TS_ACCEPT_DNS=true # Uncomment when using MagicDNS
    volumes:
      - ${APPCONFIG_DIR}/Jellyfin/ts-config:/config # Config folder used to store Tailscale files - you may need to change the path
      - ${APPCONFIG_DIR}/Jellyfin/ts/state:/var/lib/tailscale # Tailscale requirement - you may need to change the path
    devices:
      - /dev/net/tun:/dev/net/tun # Network configuration for Tailscale to work
    cap_add:
      - net_admin # Tailscale requirement
      - sys_module # Tailscale requirement
    #ports:
    #  - 0.0.0.0:${SERVICEPORT}:${SERVICEPORT} # Binding port ${SERVICE}PORT to the local network - may be removed if only exposure to your Tailnet is required
    # If any DNS issues arise, use your preferred DNS provider by uncommenting the config below
    # dns: 
    #   - ${DNS_SERVER}
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:41234/healthz"] # Check Tailscale has a Tailnet IP and is operational
      interval: 1m # How often to perform the check
      timeout: 10s # Time to wait for the check to succeed
      retries: 3 # Number of retries before marking as unhealthy
      start_period: 10s # Time to wait before starting health checks
    restart: always

########################## JELLYSEERR AND TAILSCALE ##########################
  tailscale-jellyseerr:
    image: tailscale/tailscale:latest # Image to be used
    container_name: tailscale-jellyseerr # Name for local container management
    hostname: jellyseerr # Name used within your Tailscale environment
    ports:
      - 5055:5055
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_SERVE_CONFIG=/config/serve.json # Tailsacale Serve configuration to expose the web interface on your local Tailnet - remove this line if not required
      - TS_USERSPACE=false
      - TS_ENABLE_HEALTH_CHECK=true              # Enable healthcheck endpoint: "/healthz"
      - TS_LOCAL_ADDR_PORT=127.0.0.1:41234       # The <addr>:<port> for the healthz endpoint
      - PUID=568
      - PGID=568
      #- TS_ACCEPT_DNS=true # Uncomment when using MagicDNS
    volumes:
      - ${APPCONFIG_DIR}/Jellyseerr/ts-config:/config # Config folder used to store Tailscale files - you may need to change the path
      - ${APPCONFIG_DIR}/Jellyseerr/ts/state:/var/lib/tailscale # Tailscale requirement - you may need to change the path
    devices:
      - /dev/net/tun:/dev/net/tun # Network configuration for Tailscale to work
    cap_add:
      - net_admin # Tailscale requirement
      - sys_module # Tailscale requirement
    #ports:
    #  - 0.0.0.0:${SERVICEPORT}:${SERVICEPORT} # Binding port ${SERVICE}PORT to the local network - may be removed if only exposure to your Tailnet is required
    # If any DNS issues arise, use your preferred DNS provider by uncommenting the config below
    # dns: 
    #   - ${DNS_SERVER}
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:41234/healthz"] # Check Tailscale has a Tailnet IP and is operational
      interval: 1m # How often to perform the check
      timeout: 10s # Time to wait for the check to succeed
      retries: 3 # Number of retries before marking as unhealthy
      start_period: 10s # Time to wait before starting health checks
    restart: always

  jellyseerr:
    image: ghcr.io/fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - PUID=568
      - PGID=568
      - LOG_LEVEL=debug
      - TZ=${TZ}
    # labels:
    #   tsdproxy.enable: "true"
    #   tsdproxy.name: "jellyseerr"
    #   tsdproxy.container_port: "5055"
    # ports:
    #   - 5055:5055
    volumes:
      - ${APPCONFIG_DIR}/Jellyseerr:/app/config
    restart: unless-stopped
    network_mode: service:tailscale-jellyseerr # Sidecar configuration to route Jellyfin through Tailscale
    depends_on:
      tailscale-jellyseerr:
        condition: service_healthy

#################### QBITTORRENT AND TAILSCALE #####################
  tailscale-qb:
    image: tailscale/tailscale:latest # Image to be used
    container_name: tailscale-qb # Name for local container management
    hostname: qbittorrent # Name used within your Tailscale environment
    ports:
      - 8080:8080
      - 6882:6881
      - 6882:6881/udp
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_SERVE_CONFIG=/config/serve.json # Tailsacale Serve configuration to expose the web interface on your local Tailnet - remove this line if not required
      - TS_USERSPACE=false
      - TS_ENABLE_HEALTH_CHECK=true              # Enable healthcheck endpoint: "/healthz"
      - TS_LOCAL_ADDR_PORT=127.0.0.1:41234       # The <addr>:<port> for the healthz endpoint
      - PUID=568
      - PGID=568
      #- TS_ACCEPT_DNS=true # Uncomment when using MagicDNS
    volumes:
      - ${APPCONFIG_DIR}/QBittorrent/ts-config:/config # Config folder used to store Tailscale files - you may need to change the path
      - ${APPCONFIG_DIR}/QBittorrent/ts/state:/var/lib/tailscale # Tailscale requirement - you may need to change the path
    devices:
      - /dev/net/tun:/dev/net/tun # Network configuration for Tailscale to work
    cap_add:
      - net_admin # Tailscale requirement
      - sys_module # Tailscale requirement
    #ports:
    #  - 0.0.0.0:${SERVICEPORT}:${SERVICEPORT} # Binding port ${SERVICE}PORT to the local network - may be removed if only exposure to your Tailnet is required
    # If any DNS issues arise, use your preferred DNS provider by uncommenting the config below
    # dns: 
    #   - ${DNS_SERVER}
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:41234/healthz"] # Check Tailscale has a Tailnet IP and is operational
      interval: 1m # How often to perform the check
      timeout: 10s # Time to wait for the check to succeed
      retries: 3 # Number of retries before marking as unhealthy
      start_period: 10s # Time to wait before starting health checks
    restart: always

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=568
      - PGID=568
      - TZ=${TZ}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - ${APPCONFIG_DIR}/QBittorrent:/config
      - ${MEDIA_DIR}/Downloads/Torrents:/downloads #optional
    # ports:
    #   - 8080:8080
    #   - 6882:6881
    #   - 6882:6881/udp
    # labels:
    #   tsdproxy.enable: "true"
    #   tsdproxy.name: "qbittorrent"
    #   tsdproxy.container_port: "8080"
    restart: unless-stopped
    network_mode: service:tailscale-qb # Sidecar configuration to route Jellyfin through Tailscale
    depends_on:
      tailscale-qb:
        condition: service_healthy

######################### SHOKO AND TAILSCALE #########################
  tailscale-shoko:
    image: tailscale/tailscale:latest # Image to be used
    container_name: tailscale-shoko # Name for local container management
    hostname: shoko # Name used within your Tailscale environment
    ports:
      - "8111:8111"
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_SERVE_CONFIG=/config/serve.json # Tailsacale Serve configuration to expose the web interface on your local Tailnet - remove this line if not required
      - TS_USERSPACE=false
      - TS_ENABLE_HEALTH_CHECK=true              # Enable healthcheck endpoint: "/healthz"
      - TS_LOCAL_ADDR_PORT=127.0.0.1:41234       # The <addr>:<port> for the healthz endpoint
      - PUID=568
      - PGID=568
      #- TS_ACCEPT_DNS=true # Uncomment when using MagicDNS
    volumes:
      - ${APPCONFIG_DIR}/Shoko/ts-config:/config # Config folder used to store Tailscale files - you may need to change the path
      - ${APPCONFIG_DIR}/Shoko/ts/state:/var/lib/tailscale # Tailscale requirement - you may need to change the path
    devices:
      - /dev/net/tun:/dev/net/tun # Network configuration for Tailscale to work
    cap_add:
      - net_admin # Tailscale requirement
      - sys_module # Tailscale requirement
    #ports:
    #  - 0.0.0.0:${SERVICEPORT}:${SERVICEPORT} # Binding port ${SERVICE}PORT to the local network - may be removed if only exposure to your Tailnet is required
    # If any DNS issues arise, use your preferred DNS provider by uncommenting the config below
    # dns: 
    #   - ${DNS_SERVER}
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:41234/healthz"] # Check Tailscale has a Tailnet IP and is operational
      interval: 1m # How often to perform the check
      timeout: 10s # Time to wait for the check to succeed
      retries: 3 # Number of retries before marking as unhealthy
      start_period: 10s # Time to wait before starting health checks
    restart: always

  shoko_server:
    shm_size: 256m
    container_name: shoko_server
    image: ghcr.io/shokoanime/server:latest
    restart: always
    # labels:
    #   tsdproxy.enable: "true"
    #   tsdproxy.name: "shoko"
    #   tsdproxy.container_port: "8111"
    environment:
      - PUID=568
      - PGID=568
      - TZ=${TZ}
    # ports:
    #   - "8111:8111"
    volumes:
      - "${APPCONFIG_DIR}/Shoko:/home/shoko/.shoko"
      - "${MEDIA_DIR}:/mnt/media"
    network_mode: service:tailscale-shoko # Sidecar configuration to route Jellyfin through Tailscale
    depends_on:
      tailscale-shoko:
        condition: service_healthy

######################### KAVITA AND TAILSCALE #########################
  tailscale-kavita:
    image: tailscale/tailscale:latest # Image to be used
    container_name: tailscale-kavita # Name for local container management
    hostname: kavita # Name used within your Tailscale environment
    ports:
      - "5000:5000"
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_SERVE_CONFIG=/config/serve.json # Tailsacale Serve configuration to expose the web interface on your local Tailnet - remove this line if not required
      - TS_USERSPACE=false
      - TS_ENABLE_HEALTH_CHECK=true              # Enable healthcheck endpoint: "/healthz"
      - TS_LOCAL_ADDR_PORT=127.0.0.1:41234       # The <addr>:<port> for the healthz endpoint
      - PUID=568
      - PGID=568
      #- TS_ACCEPT_DNS=true # Uncomment when using MagicDNS
    volumes:
      - ${APPCONFIG_DIR}/Kavita/ts-config:/config # Config folder used to store Tailscale files - you may need to change the path
      - ${APPCONFIG_DIR}/Kavita/ts/state:/var/lib/tailscale # Tailscale requirement - you may need to change the path
    devices:
      - /dev/net/tun:/dev/net/tun # Network configuration for Tailscale to work
    cap_add:
      - net_admin # Tailscale requirement
      - sys_module # Tailscale requirement
    #ports:
    #  - 0.0.0.0:${SERVICEPORT}:${SERVICEPORT} # Binding port ${SERVICE}PORT to the local network - may be removed if only exposure to your Tailnet is required
    # If any DNS issues arise, use your preferred DNS provider by uncommenting the config below
    # dns: 
    #   - ${DNS_SERVER}
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:41234/healthz"] # Check Tailscale has a Tailnet IP and is operational
      interval: 1m # How often to perform the check
      timeout: 10s # Time to wait for the check to succeed
      retries: 3 # Number of retries before marking as unhealthy
      start_period: 10s # Time to wait before starting health checks
    restart: always

  kavita:
    image: jvmilazz0/kavita:latest    # Using the stable branch from the official dockerhub repo.
    container_name: kavita
    volumes:
        - ${MEDIA_DIR}/Media:/data
        - ${APPCONFIG_DIR}/Kavita/config:/kavita/config     # /kavita/config must not be changed
    environment:
        - TZ=${TZ}
        - PUID=568
        - PGID=568
    # labels:
    #     tsdproxy.enable: "true"
    #     tsdproxy.name: "kavita"
    #     tsdproxy.container_port: "5000"
    # ports:
    #     - "5000:5000"
    restart: unless-stopped
    network_mode: service:tailscale-kavita # Sidecar configuration to route Jellyfin through Tailscale
    depends_on:
      tailscale-kavita:
        condition: service_healthy

######################### CWA AND TAILSCALE #########################
  tailscale-cwa:
    image: tailscale/tailscale:latest # Image to be used
    container_name: tailscale-cwa # Name for local container management
    hostname: cwa # Name used within your Tailscale environment
    ports:
      - "8083:8083"
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_SERVE_CONFIG=/config/serve.json # Tailsacale Serve configuration to expose the web interface on your local Tailnet - remove this line if not required
      - TS_USERSPACE=false
      - TS_ENABLE_HEALTH_CHECK=true              # Enable healthcheck endpoint: "/healthz"
      - TS_LOCAL_ADDR_PORT=127.0.0.1:41234       # The <addr>:<port> for the healthz endpoint
      - PUID=568
      - PGID=568
      #- TS_ACCEPT_DNS=true # Uncomment when using MagicDNS
    volumes:
      - ${APPCONFIG_DIR}/CWA/ts-config:/config # Config folder used to store Tailscale files - you may need to change the path
      - ${APPCONFIG_DIR}/CWA/ts/state:/var/lib/tailscale # Tailscale requirement - you may need to change the path
    devices:
      - /dev/net/tun:/dev/net/tun # Network configuration for Tailscale to work
    cap_add:
      - net_admin # Tailscale requirement
      - sys_module # Tailscale requirement
    #ports:
    #  - 0.0.0.0:${SERVICEPORT}:${SERVICEPORT} # Binding port ${SERVICE}PORT to the local network - may be removed if only exposure to your Tailnet is required
    # If any DNS issues arise, use your preferred DNS provider by uncommenting the config below
    # dns: 
    #   - ${DNS_SERVER}
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:41234/healthz"] # Check Tailscale has a Tailnet IP and is operational
      interval: 1m # How often to perform the check
      timeout: 10s # Time to wait for the check to succeed
      retries: 3 # Number of retries before marking as unhealthy
      start_period: 10s # Time to wait before starting health checks
    restart: always

  calibre-web-automated:
    image: crocodilestick/calibre-web-automated:latest
    container_name: calibre-web-automated
    environment:
      # Only change these if you know what you're doing
      - PUID=568
      - PGID=568
      # Edit to match your current timezone https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
      - TZ=${TZ}
    volumes:
      # CW users migrating should stop their existing CW instance, make a copy of the config folder, and bind that here to carry over all of their user settings ect.
      - ${APPCONFIG_DIR}/CWA/config:/config
      # This is an ingest dir, NOT a library one. Anything added here will be automatically added to your library according to the settings you have configured in CWA Settings page. All files placed here are REMOVED AFTER PROCESSING
      - /mnt/SSD/TrueNAS/Documents/CWA-Ingest:/cwa-book-ingest
      # If you don't have an existing library, CWA will automatically create one at the bind provided here
      - ${MEDIA_DIR}/Media/Books:/calibre-library
    # labels:
    #       tsdproxy.enable: "true"
    #       tsdproxy.name: "cwa"
    #       tsdproxy.container_port: "8083"
    # ports:
    #   # Change the first number to change the port you want to access the Web UI, not the second
    #   - 8083:8083
    restart: unless-stopped
    network_mode: service:tailscale-cwa # Sidecar configuration to route Jellyfin through Tailscale
    depends_on:
      tailscale-cwa:
        condition: service_healthy